name: goreleaser

on:
  push:
    tags:
      - '*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
##     remove for local runner
#      -
#        name: Set up Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.15
#      - name: Import Code-Signing Certificates
#        uses: Apple-Actions/import-codesign-certs@v1
#        with:
#          # The certificates in a PKCS12 file encoded as a base64 string
#          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
#          # The password used to import the PKCS12 file.
#          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
#
#      - name: Install gon and goreleaser via HomeBrew for code signing and app notarization
#        run: |
#          brew tap mitchellh/gon
#          brew install mitchellh/gon/gon
#          brew install goreleaser
#          pip3 install GitPython
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install GitPython
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      -
#        name: Run GoReleaser
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          AC_USERNAME: ${{ secrets.AC_USERNAME }}
#          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
#        run: |
#
#          goreleaser --rm-dist --force
#      -
#        name: Check Binary
#        run: |
#          ./dist/lets_linux_amd64/lets version