# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
project_name: cli
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
    # you may remove this if you don't need go generate
    - go generate ./...
    - chmod +x ./scripts/gen_version.py
    - python3 ./scripts/gen_version.py
    # if npx not install, install it
#    -  command -v upx >/dev/null 2>&1 || { brew install upx >&2; }
builds:
  - env:
      - CGO_ENABLED=0
    binary: lets
    id: lets
    goos:
      - linux
    flags:
      - -trimpath
    ldflags:
      - -X github.com/let-sh/cli/info.Version={{.Version}}
      - -s
      - -w
  - env:
      - CGO_ENABLED=0
    binary: lets
    id: lets_windows
    goos:
      - windows
    flags:
      - -trimpath
    ldflags:
      - -X github.com/let-sh/cli/info.Version={{.Version}}
      - -s
      - -w
#    hooks:
#      post:
#        - upx "{{ .Path }}"
#        - go-msi make --msi let.sh.msi --version {{.Version}}
  - env:
      - CGO_ENABLED=0
    binary: lets
    id: lets_macos_amd
    goos:
      - darwin
    goarch:
      - amd64
    flags:
      - -trimpath
    ldflags:
      - -X github.com/let-sh/cli/info.Version={{.Version}}
      - -s
      - -w
#    hooks:
#      post:
#        - upx "{{ .Path }}"
#        - gon gon_amd.hcl
  - env:
      - CGO_ENABLED=0
    binary: lets
    id: lets_macos_arm
    goos:
      - darwin
    goarch:
      - arm64
    flags:
      - -trimpath
    ldflags:
      - -X github.com/let-sh/cli/info.Version={{.Version}}
      - -s
      - -w
#    hooks:
#      post:
#        - upx "{{ .Path }}"
#        - gon gon_arm.hcl
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
scoop:
  commit_author:
    name: Fred Liang
    email: fred@oasis.ac
  homepage: "https://alpha.let.sh.ch/"
  description: "let.sh command line interface."
release:
  ids:
    - lets
  github:
    owner: let-sh
    name: cli
  prerelease: auto
  extra_files:
    - glob: ./dist/lets_macos_amd_darwin_amd64/*.zip
    - glob: ./dist/lets_macos_amd_darwin_amd64/*.dmg
blobs:
  -
    provider: s3
    endpoint: cli-1302992869.cos.accelerate.myqcloud.com
    region: cn-hongkong
    bucket: "."
    folder: "."
    extra_files:
      - glob: ./version
      - glob: ./scripts/install.sh
      - glob: ./scripts/install.ps1
      - glob: ./dist/lets_macos_arm_darwin_amd64/*.zip
      - glob: ./dist/lets_macos_arm_darwin_amd64/*.dmg
brews:
  -
    name: lets

    goarm: 6

    # NOTE: make sure the url_template, the token and given repo (github or gitlab) owner and name are from the
    # same kind. We will probably unify this in the next major version like it is done with scoop.

    # GitHub/GitLab repository to push the formula to
    # Gitea is not supported yet, but the support coming
    tap:
      owner: let-sh
      name: homebrew-tap
      # Optionally a token can be provided, if it differs from the token provided to GoReleaser
      token: "{{ .Env.GH_RELEASE_TOKEN }}"

    url_template: "http://install.let-sh.com/{{ .ArtifactName }}"

    # Allows you to set a custom download strategy. Note that you'll need
    # to implement the strategy and add it to your tap repository.
    # Example: https://docs.brew.sh/Formula-Cookbook#specifying-the-download-strategy-explicitly
    # Default is empty.
#    download_strategy: CurlDownloadStrategy.

    # Allows you to add a custom require_relative at the top of the formula template
    # Default is empty
    # custom_require: custom_download_strategy

    # Git author used to commit to the repository.
    # Defaults are shown.
    commit_author:
      name: fredliang
      email: fred@oasis.ac

    # Folder inside the repository to put the formula.
    # Default is the root folder.
    folder: Formula

    # Caveats for the user of your binary.
    # Default is empty.
    caveats: "Run `lets --help`"

    # Your app's homepage.
    # Default is empty.
    homepage: "https://let.sh/"

    # Your app's description.
    # Default is empty.
    description: "Software to create fast and easy drum rolls."

    # SPDX identifier of your app's license.
    # Default is empty.
    license: "MIT"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
#    skip_upload: true

    # Packages your package depends on.
    dependencies:
      - name: git
      - name: zsh
        type: optional


    # So you can `brew test` your formula.
    # Default is empty.
    test: |
      system "#{bin}/lets version"

    # Custom install script for brew.
    # Default is 'bin.install "program"'.
    install: |
      bin.install "lets"

archives:
  - id: lets_override
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip

